# Matrix Algebra
import numpy as np
A = np.array([[1,2,3],[2,7,4]])
B = np.array([[1,-1],[0,1]])
C = np.array([[5,-1],[9,1],[6,0]])
D = np.array([[3,-2,-1],[1,2,3]])
u = np.array([6,2,-3,5])
v = np.array([3,5,-1,4])
wT = np.array([1,8,0,5])
w = wT.transpose()
alpha=6

print('Shape of Matrix A is:')
print(A.shape)
print('Shape of Matrix B is:')
print(B.shape)
print('Shape of Matrix C is:')
print(C.shape)
print('Shape of Matrix D is:')
print(D.shape)
print('u+v')
print(u+v)
print('u-v')
print(u-v)
print('u*alpha')
print(alpha*u)
print('u*v')
z=u*v
print(sum(z))

def determinant_one_dimensional_vector(list):
    sum_sq=0
    for _ in range(0,len(list)):
        sum_sq=sum_sq+(list[_]**2)
    return(sum_sq**0.5)
print('Determinant of u:')
print(determinant_one_dimensional_vector(u))
print('A+C:')
#q31=A+C
print('Size combination is not permissible')
print('A-CT:')
q32=A-C.transpose()
print(q32)
print('CT+3D:')
q33=C.transpose()+3*D
print(q33)
print('BA:')
q34=np.dot(B,A)
print(q34)
print('BAT:')
AT=A.transpose()
#q35=np.dot(B,AT)
print('Size combination is not permissible')
print('BC:')
#q36=np.dot(B,C)
print('Size combination is not permissible')
print('CB:')
q37=np.dot(C,B)
print(q37)
print('B^4:')
B2=np.dot(B,B)
B3=np.dot(B,B2)
q38=np.dot(B,B3)
print(q38)
print('AAT:')
AT=A.transpose()
q39=np.dot(A,AT)
print(q39)
print('DTD:')
DT=D.transpose()
q310=np.dot(DT,D)
print(q310)

